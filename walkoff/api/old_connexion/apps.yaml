/apps:
  get:
    tags:
      - System
    summary: Gets all apps
    description: ''
    operationId: walkoff.server.endpoints.appapi.read_all_apps
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              type: array
              description: List of app names
              items:
                type: string
                example: [PhillipsHue, OpenDaylight, PaloAlto]

/apps/apis:
  get:
    tags:
      - Apps
    summary: Get all app apis
    description: ''
    operationId: walkoff.server.endpoints.appapi.read_all_app_apis
    parameters:
      - name: field_name
        in: query
        description: The name of the field of the api to get for all apps
        required: false
        schema:
          type: string
          enum: [info, action_apis, condition_apis, transform_apis, device_apis, tags, external_docs]
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              type: array
              items:
                type: object

/apps/apis/{app_name}:
  get:
    tags:
      - Apps
    summary: Get and app's api
    description: ''
    operationId: walkoff.server.endpoints.appapi.read_app_api
    parameters:
      - name: app_name
        in: path
        description: The name of the app to get
        required: true
        schema:
          type: string
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppApi'
      404:
        description: App does not exist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/apps/apis/{app_name}/{field_name}:
  get:
    tags:
      - Apps
    summary: Get a field of an app's api
    description: ''
    operationId: walkoff.server.endpoints.appapi.read_app_api_field
    parameters:
      - name: app_name
        in: path
        description: The name of the app to get
        required: true
        schema:
          type: string
      - name: field_name
        in: path
        description: The name of the field in the app api to get
        required: true
        schema:
          type: string
          enum: [info, action_apis, condition_apis, transform_apis, device_apis, tags, externalDocs]
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              type: object
      404:
        description: App does not exist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
