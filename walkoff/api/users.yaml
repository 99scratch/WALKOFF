components:
  schemas:
    AddUser:
      type: object
      required: [username, password]
      properties:
        username:
          description: Username or email of the user
          type: string
          example: administrator
        password:
          description: Password for the user
          type: string
          example: password123
        roles:
          description: A list of role IDs that this user possesses. Roles can only be assigned to a User by an admin.
          $ref: '#/components/schemas/RoleIdList'
        active:
          description: activate/deactive a user. Active can only be changed by an admin.
          type: boolean

    EditUser:
      type: object
      required: [id]
      properties:
        id:
          description: Database id of the user
          type: integer
          example: 123
        username:
          description: New username or email of the user
          type: string
          example: administrator
        old_password:
          description: Previous password for the user
          type: string
          example: password123
        password:
          description: New password for the user
          type: string
          example: password321
        active:
          description: activate/deactive a user. Active can only be changed by an admin.
          type: boolean
        roles:
          description: A new list of role IDs that this user will possess. Roles can only be assigned by an admin.
          $ref: '#/components/schemas/RoleIdList'

    DisplayUser:
      type: object
      properties:
        id:
          description: Database id of the user
          type: integer
          example: 123
          readOnly: true
        username:
          description: Username or email of the user
          type: string
          example: administrator
        active:
          description: activate/deactive a user
          type: boolean
        roles:
          description: List of role object IDs that this user possesses
          type: array
          items:
            type: integer

    RoleIdList:
      type: array
      items:
        type: object
        required: [id]
        properties:
          id:
            type: integer
            description: The ID of a role the user posesses

  responses:
    UsersGet200:
      description: Success
      content:
        application/json:
          schema:
            type: array
            description: A list of users
            items:
              $ref: '#/components/schemas/DisplayUser'

    UsersPost201:
      description: User created.
      content:
        application/json:
          schema:
            description: The newly created user.
            $ref: '#/components/schemas/DisplayUser'

    UsersPost400:
      description: Could not create user <username>. User already exists.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    UsersPost:
      description: The new user object to be created
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddUser'

    UsersPut:
      description: Updated fields for the user object
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditUser'