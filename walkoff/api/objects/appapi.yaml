components:
  parameters:
    field_name:
      in: query
      description: The name of the field of the api to get for all apps
      required: false
      schema:
        type: string
        enum: [info, action_apis, condition_apis, transform_apis, device_apis, tags, external_docs]
    app_name:
      in: path
      description: The name of the app to get
      required: true
      schema:
        type: string
  responses:
    ReadAllApps:
      type: array
      description: List of App names
      items:
        type: string
        example: [PhillipsHue, OpenDaylight, PaloAlto]
    ReadAllAppApis:
      type: array
      description: List of App APIs
      items:
        type: object
  schemas:
    AppApi:
      type: object
      description: Api used for an app
      required: [info]
      properties:
        info:
          $ref: '#/components/schemas/ApiInfo'
        action_apis:
          description: Actions associated with this app
          type: array
          items:
            $ref: '#/components/schemas/ActionApi'
        condition_apis:
          description: Conditions associated with this app
          type: array
          items:
            $ref: '#/components/schemas/ConditionApi'
        transform_apis:
          description: Transforms associated with this app
          type: array
          items:
            $ref: '#/components/schemas/TransformApi'
        device_apis:
          description: Devices associated with this app
          type: array
          items:
            $ref: '#/components/schemas/DeviceApi'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ApiTag'
          uniqueItems: true
        external_docs:
          type: array
          items:
            $ref: '#/components/schemas/ExternalDoc'

    ApiInfo:
      type: object
      description: General information about the API
      required: [version, title]
      properties:
        title:
          type: string
          description: A unique and precise title of the API
          example: Splunk
        version:
          type: string
          description: A semantic version number of the API
        description:
          type: string
          description: A longer description of the API. Should be different from the title.
        terms_of_service:
          type: string
          description: Terms of service for the API
        contact:
          $ref: '#/components/schemas/ApiContact'
        license:
          $ref: '#/components/schemas/ApiLicense'

    ApiContact:
      type: object
      description: Contact information for the owners of this API
      properties:
        name:
          type: string
          description: The name of the contact person or organization
        url:
          type: string
          description: The URL pointing to the contact information
          format: uri
        email:
          type: string
          description: The email address of the contact person/organization
          format: email

    ApiLicense:
      type: object
      description: License information for this API
      required: [name]
      properties:
        name:
          type: string
          description: The name of the license type
        url:
          type: string
          description: The URL pointing to the license
          format: uri

    ActionApi:
      type: object
      description: The api of an app's action
      required: [name, run, returns]
      properties:
        name:
          type: string
          description: Unique name of the action
        run:
          type: string
          description: The path to the executable function
        default_return:
          type: string
          description: The name of the default return code (if none specified, defaults to "Success")
        returns:
          type: array
          items:
            $ref: '#/components/schemas/ReturnApi'
          description: The return types of this action
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterApi'
          description: The parameters needed by this action
        deprecated:
          type: boolean
          default: false
          description: Is this action deprecated?
        tags:
          type: array
          items:
            type: string
          description: Tags for this action
          uniqueItems: true
        summary:
          type: string
          description: A brief summary of this action
        description:
          type: string
          description: A longer description of the operation
        external_docs:
          type: array
          items:
            $ref: '#/components/schemas/ExternalDoc'

    ConditionApi:
      type: object
      description: The api of an app's condition
      required: [name, run, returns, data_in]
      properties:
        name:
          type: string
          description: Unique name of the action
        run:
          type: string
          description: The path to the executable function
        data_in:
          type: string
          description: Name of parameter which comes from executed action
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterApi'
          description: The parameters needed by this action
        deprecated:
          type: boolean
          default: false
          description: Is this action deprecated?
        tags:
          type: array
          items:
            type: string
          description: Tags for this action
          uniqueItems: true
        summary:
          type: string
          description: A brief summary of this action
        description:
          type: string
          description: A longer description of the operation
        external_docs:
          type: array
          items:
            $ref: '#/components/schemas/ExternalDoc'
        returns:
          type: array
          items:
            $ref: '#/components/schemas/ReturnApi'
          description: The return types of this action

    TransformApi:
      type: object
      description: The api of an app's transform
      required: [name, run, data_in, returns]
      properties:
        name:
          type: string
          description: Unique name of the action
        run:
          type: string
          description: The path to the executable function
        data_in:
          type: string
          description: Name of parameter which comes from executed action
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterApi'
          description: The parameters needed by this action
        deprecated:
          type: boolean
          default: false
          description: Is this action deprecated?
        tags:
          type: array
          items:
            type: string
          description: tags for this action
          uniqueItems: true
        summary:
          type: string
          description: A brief summary of this action
        description:
          type: string
          description: A longer description of the operation
        external_docs:
          type: array
          items:
            $ref: '#/components/schemas/ExternalDoc'
        returns:
          type: array
          items:
            $ref: '#/components/schemas/ReturnApi'
          description: The return types of this transform

    DeviceApi:
      type: object
      required: [name, fields]
      properties:
        name:
          type: string
          description: Name of the device type
        description:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DeviceFieldApi'

    DeviceFieldApi:
      type: object
      required: [name, schema]
      properties:
        name:
          type: string
        description:
          type: string
          description: Description of what the argument provides
        encrypted:
          type: boolean
          description: Is this field encrypted
          default: false
        placeholder:
          type: string
          description: Brief description of the field to be used to prompt a user
        required:
          type: boolean
          default: false
          description: Is this field required?
        schema:
          $ref: '#/components/schemas/ParameterSchema'


    ParameterApi:
      type: object
      description: A parameter using for actions
      required: [name, schema]
      properties:
        name:
          type: string
        example:
          description: Example of the parameter
        description:
          type: string
          description: Description of the parameter
        placeholder:
          type: string
          description: Brief description of the field to be used to prompt a user
        required:
          type: boolean
          default: false
          description: Is this parameter required
        schema:
          $ref: '#/components/schemas/ParameterSchema'

    ReturnApi:
      type: object
      description: A specification of what an action returns
      required: [status]
      properties:
        status:
          type: string
          description: Status of the return
        description:
          type: string
          description: Description of the return type
        failure:
          type: boolean
          description: Whether this return type indicates action failure
          default: false
        schema:
          $ref: '#/components/schemas/ParameterSchema'
        examples:
          description: An exaple of the returned type

    ExternalDoc:
      type: object
      description: information about external documentation
      required: [url]
      properties:
        description:
          type: string
          description: Description of the documentation
        url:
          type: string
          description: Points to the external documentation
          format: uri

    ApiTag:
      type: object
      description: A tag for a class of actions/conditions/transforms in this app
      required: [name]
      properties:
        name:
          type: string
          description: The name of the tag
        description:
          type: string
          description: Description of the tag
        external_docs:
          type: array
          items:
            $ref: '#/components/schemas/ExternalDoc'

    ParameterSchema:
      type: object
      description: Fields used to validate parameter against a JSON schema (Draft 4)
      required: [type]
      properties:
        type:
          type: string
          enum: [string, boolean, integer, number, object, array]
        format:
          type: string
          enum: [date-time, email, hostname, ipv4, ipv6, uri, uri-reference, uri-template, json-pointer]
        multipleOf:
          type: number
          minimum: 0
          exclusiveMinimum: true
        maximum:
          type: number
        exclusiveMaximum:
          type: boolean
        minimum:
          type: number
        exclusiveMinimum:
          type: boolean
        maxLength:
          type: integer
          minimum: 0
        minLength:
          type: integer
          minimum: 0
        pattern:
          type: string
        maxItems:
          type: integer
          minimum: 0
        minItems:
          type: integer
          minimum: 0
        uniqueItems:
          type: boolean
        enum:
          type: array
          items: {}
          minItems: 1
