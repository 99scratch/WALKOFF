syntax = "proto2";

package core;

message Message {

    enum Type {
        WORKFLOWPACKET = 1;
        WORKFLOWPACKETDATA = 2;
        ACTIONPACKET = 3;
        ACTIONPACKETDATA = 4;
        GENERALPACKET = 5;
        USERMESSAGE = 6;
        LOGMESSAGE = 7;
        WORKERPACKET = 8;
    }

    optional Type type = 1;
    optional string event_name = 2;
    oneof packet {
        WorkflowPacket workflow_packet = 3;
        ActionPacket action_packet = 4;
        GeneralPacket general_packet = 5;
        UserMessage message_packet = 6;
        LoggingMessage logging_packet = 7;
        WorkerPacket worker_packet = 8;
    }
    optional string user = 9;
}

message WorkflowSender {
    optional string name = 1;
    optional string id = 2;
    optional string execution_id = 3;
}


message WorkflowPacket {
    optional WorkflowSender sender = 1;
    optional string additional_data = 2;

}

message Argument {
    optional string name = 1;
    optional string value = 2;
    optional string reference = 3;
    repeated Argument selection = 4;
}

message ActionPacket {

    message ActionSender {
        optional string name = 1;
        optional string id = 2;
        optional string execution_id = 3;
        optional string app_name = 4;
        optional string action_name = 5;
        repeated Argument arguments = 6;
        optional int32 device_id = 9;
    }

    optional ActionSender sender = 1;
    optional WorkflowSender workflow = 2;
    optional string additional_data = 3;

}

message EnvironmentVariable {
    optional string id = 1;
    optional string value = 2;
}

message GeneralPacket {

    message GeneralSender {
        optional string id = 1;
        optional string app_name = 2;
    }

    optional GeneralSender sender = 1;
    optional WorkflowSender workflow = 2;
}

message WorkflowControl {
    enum Type {
        PAUSE = 1;
        ABORT = 2;
    }
    optional Type type = 1;
    optional string workflow_execution_id = 2;
}

message CommunicationPacket {

    enum Type {
        WORKFLOW = 1;
        EXIT = 2;
    }

    optional Type type = 1;
    optional WorkflowControl workflow_control_message = 2;
}

message UserMessage {
    optional ActionPacket.ActionSender sender = 1;
    optional WorkflowSender workflow = 2;
    optional string subject = 3;
    optional string body = 4;
    optional bool requires_reauth = 5;
    repeated int32 users = 6;
    repeated int32 roles = 7;
}

message ExecuteWorkflowMessage {
    optional string workflow_id = 1;
    optional string workflow_execution_id = 2;
    optional string start = 3;
    repeated Argument arguments = 4;
    optional bool resume = 5;
    repeated EnvironmentVariable environment_variables = 6;
    optional string user = 7;
}

message LoggingMessage {
    optional WorkflowSender workflow = 1;
    optional string name = 2;
    optional string app_name = 3;
    optional string action_name = 4;
    optional string level = 5;
    optional string message = 6;
}

message WorkerPacket {
    optional string id = 1;
}
